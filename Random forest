import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# 读取数据
csv_file_path = '/Users/chendayang/Desktop/final.data.csv'  # 修改为您的文件实际路径
data = pd.read_csv(csv_file_path)

# 数据预处理
data['date'] = pd.to_datetime(data['date'])
data.fillna(method='ffill', inplace=True)
data.drop(['date'], axis=1, inplace=True)

# 分割数据集
X = data.drop('day_auction_price_GBP_per_MWh', axis=1)
y = data['day_auction_price_GBP_per_MWh']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 插补缺失值
imputer = SimpleImputer(strategy='mean')
X_train_imputed = imputer.fit_transform(X_train)
X_test_imputed = imputer.transform(X_test)

# 数据标准化
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train_imputed)
X_test_scaled = scaler.transform(X_test_imputed)

# 创建和训练随机森林模型
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train_scaled, y_train)

# 使用模型进行预测
y_pred = model.predict(X_test_scaled)

# 绘制实际值和预测值的对比图
plt.figure(figsize=(10, 6))
plt.plot(y_test.values, label='Actual', color='black')
plt.plot(y_pred, label='Predicted', color='grey')
plt.title('Actual vs Predicted Electricity Prices')
plt.xlabel('Samples')
plt.ylabel('Electricity Price (GBP per MWh)')
plt.legend()
plt.show()

mse = mean_squared_error(y_test, y_pred)

mse

我用段老师 提供的代码 跑了个random forestde的模型 你们可以试试
